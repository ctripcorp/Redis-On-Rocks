name: CI

on: 
  push:
    branches: [ xredis_2_ror ]
  pull_request:
    branches: [ xredis_2_ror ]

jobs:
   unit:
    strategy:
      matrix:
        platform: [ubuntu-24.04]
    runs-on: ${{ matrix.platform }}
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - name: get rocksdb sha
      id: rocksdb-sha
      run: |
        ROCKSDB_SHA=$(cd deps/rocksdb && git rev-parse HEAD)
        echo "ROCKSDB_SHA is $ROCKSDB_SHA"
        echo "ROCKSDB_SHA=$ROCKSDB_SHA" >> $GITHUB_ENV
      shell: bash
    - name: cache rocksdb
      id: cache-rocksdb
      uses: actions/cache@v3
      with:
        path: deps/rocksdb
        key: ${{ runner.os }}-rocksdb-${{ env.ROCKSDB_SHA }}
    - name: clean rocksdb (if cache not found)
      if: steps.cache-rocksdb.outputs.cache-hit != 'true'
      run: |
        make clean
      working-directory: deps/rocksdb
    - name: Unit Test
      run: |
        sudo apt-get update
        sudo apt-get -y install libsnappy-dev zlib1g-dev libstdc++6
        make unit-test -j8

   mem:
    strategy:
      matrix:
        platform: [ubuntu-24.04]
    runs-on: ${{ matrix.platform }}
    steps:
    - uses: actions/checkout@v2
      with:
          submodules: true
    - name: get rocksdb sha
      id: rocksdb-sha
      run: |
        ROCKSDB_SHA=$(cd deps/rocksdb && git rev-parse HEAD)
        echo "ROCKSDB_SHA is $ROCKSDB_SHA"
        echo "ROCKSDB_SHA=$ROCKSDB_SHA" >> $GITHUB_ENV
      shell: bash
    - name: cache rocksdb
      id: cache-rocksdb
      uses: actions/cache@v3
      with:
        path: deps/rocksdb
        key: ${{ runner.os }}-rocksdb-${{ env.ROCKSDB_SHA }}
    - name: clean rocksdb (if cache not found)
      if: steps.cache-rocksdb.outputs.cache-hit != 'true'
      run: |
        make clean
      working-directory: deps/rocksdb
    - name: make
      run: |
          sudo apt-get update
          sudo apt-get -y install libsnappy-dev zlib1g-dev libstdc++6
          make -j8
    - name: make test
      run: make test

   swap:
    strategy:
      matrix:
        platform: [ubuntu-24.04]
    runs-on: ${{ matrix.platform }}
    steps:
    - uses: actions/checkout@v2
      with:
          submodules: true
    - name: get rocksdb sha
      id: rocksdb-sha
      run: |
        ROCKSDB_SHA=$(cd deps/rocksdb && git rev-parse HEAD)
        echo "ROCKSDB_SHA is $ROCKSDB_SHA"
        echo "ROCKSDB_SHA=$ROCKSDB_SHA" >> $GITHUB_ENV
      shell: bash
    - name: cache rocksdb
      id: cache-rocksdb
      uses: actions/cache@v3
      with:
        path: deps/rocksdb
        key: ${{ runner.os }}-rocksdb-${{ env.ROCKSDB_SHA }}
    - name: clean rocksdb (if cache not found)
      if: steps.cache-rocksdb.outputs.cache-hit != 'true'
      run: |
        make clean
      working-directory: deps/rocksdb
    - name: make
      run: |
          sudo apt-get update
          sudo apt-get -y install libsnappy-dev zlib1g-dev libstdc++6
          make -j8
    - name: make test
      run: make test-disk

   swap-asan:
    strategy:
      matrix:
        platform: [ubuntu-24.04]
    runs-on: ${{ matrix.platform }}
    steps:
    - uses: actions/checkout@v2
      with:
          submodules: true
    - name: get rocksdb sha
      id: rocksdb-sha
      run: |
        ROCKSDB_SHA=$(cd deps/rocksdb && git rev-parse HEAD)
        echo "ROCKSDB_SHA is $ROCKSDB_SHA"
        echo "ROCKSDB_SHA=$ROCKSDB_SHA" >> $GITHUB_ENV
      shell: bash
    - name: cache rocksdb (asan version)
      id: cache-rocksdb-asan
      uses: actions/cache@v3
      with:
        path: deps/rocksdb
        key: ${{ runner.os }}-rocksdb-asan-${{ env.ROCKSDB_SHA }}
    - name: clean rocksdb (if cache not found)
      if: steps.cache-rocksdb-asan.outputs.cache-hit != 'true'
      run: |
        make clean
      working-directory: deps/rocksdb
    - name: make
      run: |
          sudo apt-get update
          sudo apt-get -y install libsnappy-dev zlib1g-dev libstdc++6
          make SANITIZER=address -j8
    - name: make test
      run: make test-disk


